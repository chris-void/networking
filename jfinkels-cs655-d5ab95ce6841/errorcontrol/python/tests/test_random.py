# test_random.py - unit tests for the random module
#
# CS655 error control assignment
# Jeffrey Finkelstein
# November 2011
"""Provides unit tests for the `random` module."""
import unittest

from simulation.random import OSIRandom

__all__ = ['OSIRandomTest']
"""The names of all the test cases, so that when other modules do `import *
from test_random`, they get the names of all the test cases.

"""


class OSIRandomTest(unittest.TestCase):
    """Tests for the `OSIRandom` class.

    These tests are designed to ensure that the seed and pseudo-random numbers
    generated by this class match those of the implementation provided in the
    Java source code for this assignment.

    """

    def test___init__(self):
        """Tests that the seed is correctly initialized."""
        r = OSIRandom(1234)
        self.assertEqual(list(range(1234, 1239)), r.seed)

    def test_next_double(self):
        """Tests that generating a random floating point number produces the
        same results as in the original Java implementation.

        """
        r = OSIRandom(1234)
        x = r.next_double(0)
        y = r.next_double(4)
        z = r.next_double(3)
        self.assertEqual((0.108584856715598, 0.1640369884334849,
                          0.6501968443861201), (x, y, z))

    def test_next_int(self):
        """Tests that generating a random integer produces the same results as
        in the original Java implementation.

        """
        r = OSIRandom(1234)
        x = r.next_int(0)
        y = r.next_int(4)
        z = r.next_int(3)
        self.assertEqual((3558, 5375, 21305), (x, y, z))
