# __main__.py - runs the simulation with a specified set of parameters
#
# CS655 simulation assignment
# Jeffrey Finkelstein
# October 2011
"""When this module is run as the main module, it runs the specific simulation
specified in the assignment.

There are some required command-line arguments. To view the help message which
describes the arguments, run the command::

    python simulation --help

"""
from argparse import ArgumentParser as ArgParser
import random
import sys

from runner import run_parameterized_simulation

DESCRIPTION = \
"""Runs the packet traffic simulation.

The '-c' or '--scheduler' parameter is required and must be followed by one of
'FIFO', 'RR', or 'DRR', representing the first-in, first-out scheduler, the
round-robin scheduler, and the deficit round-robin scheduler.

The '-m' or '--total-offered-load' parameter is required and must be followed
by a floating point number representing the total offered load of all traffic
sources over the output link.

"""


def parse_args():
    """Parses command-line arguments and returns a dictionary which contains
    their values.

    Keys in the dictionary include
    * `scheduler` - the type of scheduler to use: `'FIFO'`, `'RR'`, or `'DRR'` 
    * `debug` - whether to show debugging messages
    * `rogue` - the number of rogue sources to include
    * `ftp` - the number of FTP sources to include
    * `telnet` - the number of telnet sources to include
    * `total_offered_load` - the total offered load for all traffic sources.
    * `seed` - an integer which will be used as the seed to the random number
      generator. If not specified, a random seed will be used.

    The names of the command-line arguments match the keyword arguments to the
    `runner.run_parameterized_simulation` function.

    """
    argparser = ArgParser(description=DESCRIPTION, prog='simulation')
    argparser.add_argument('--rogue', '-r', type=int, default=1,
                           help="number of rogue sources")
    argparser.add_argument('--ftp', '-f', type=int, default=4,
                           help="number of FTP sources")
    argparser.add_argument('--telnet', '-t', type=int, default=6,
                           help="number of telnet sources")
    argparser.add_argument('--scheduler', '-c', choices=['FIFO', 'RR', 'DRR'],
                           required=True, help='the type of scheduler to use')
    argparser.add_argument('--debug', '-d', action='store_true',
                           help='display debug messages')
    argparser.add_argument('--total-offered-load', '-m', type=float,
                           help='the total offered load for all sources',
                           required=True)
    argparser.add_argument('--max-packets', '-x', type=int, default=100000,
                           help=('maximum number of packets generated by all'
                                 ' sources'))
    argparser.add_argument('--seed', '-s', type=int,
                           help='the seed for the random number generator')
    return vars(argparser.parse_args())


if __name__ == '__main__':
    result = run_parameterized_simulation(**parse_args())
    for source_id, stats in result.items():
        print
        print 'source_id', source_id
        print stats
        print
